name: Continuous Delivery (CD) Actions

on:
  push:
    branches:
      - release/*
  workflow_dispatch:
    inputs:
      tag:
        description: "Enter release version (e.g., v1.0.0)"
        required: true

jobs:
  running-tests:
    name: âœ… Running Flutter Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Get dependencies
        run: flutter pub get
      - name: Creating env file
        run: printf 'SHARED_PREFERENCES_KEY=${{ secrets.SHARED_PREFERENCES_KEY }}\n' >> .env
      - name: Run tests
        run: flutter test

  build-web-app:
    name: ðŸŒŽ Deploying web app to GitHub Pages
    runs-on: ubuntu-latest
    needs: running-tests
    steps:
      - uses: actions/checkout@v3
      - name: Creating env file
        run: printf 'SHARED_PREFERENCES_KEY=${{ secrets.SHARED_PREFERENCES_KEY }}\n' >> .env
      - uses: subosito/flutter-action@v2
      - uses: bluefireteam/flutter-gh-pages@v8
        with:
          workingDir: .
          webRenderer: canvaskit
          targetBranch: web-export
          baseHref: /flutter_clean_architecture_task/

  build-apk-app:
    name: ðŸ¤– Deploying android app to GitHub Releases
    runs-on: ubuntu-latest
    needs: running-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'
      - name: Creating env file
        run: printf 'SHARED_PREFERENCES_KEY=${{ secrets.SHARED_PREFERENCES_KEY }}\n' >> .env
      - uses: subosito/flutter-action@v2
      - run: flutter pub get
      - name: Set Release Tag
        run: echo "TAG_NAME=${{ github.event.inputs.tag || github.ref_name }}" >> $GITHUB_ENV
      - run: flutter build apk --release --target-platform android-arm --split-per-abi
      - name: Rename APK file with version tag
        run: mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/app/outputs/flutter-apk/anrdoid-app-${{ env.TAG_NAME }}-release.apk
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/app/outputs/flutter-apk/anrdoid-app-${{ env.TAG_NAME }}-release.apk
          tag: ${{ env.TAG_NAME }}
          overwrite: true
          body: "Release ${{ env.TAG_NAME }}"

  build-ios-ipa:
    name: ðŸŽ‰ Deploying ios app to GitHub Releases
    runs-on: macos-latest
    needs: running-tests
    steps:
      - uses: actions/checkout@v3
      - name: Creating env file
        run: printf 'SHARED_PREFERENCES_KEY=${{ secrets.SHARED_PREFERENCES_KEY }}\n' >> .env
      - run: flutter pub get
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - run: pod repo update
        working-directory: ios
      - name: Set Release Tag
        run: echo "TAG_NAME=${{ github.event.inputs.tag || github.ref_name }}" >> $GITHUB_ENV
      - run: flutter build ios --release --no-codesign
      - run: mkdir Payload
        working-directory: build/ios/iphoneos
      - run: mv Runner.app/ Payload
        working-directory: build/ios/iphoneos
      - name: Zip output with version tag
        run: zip -qq -r -9 ios-app-${{ env.TAG_NAME }}-release.ipa Payload
        working-directory: build/ios/iphoneos
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/ios-app-${{ env.TAG_NAME }}-release.ipa
          tag: ${{ env.TAG_NAME }}
          overwrite: true
          body: "Release ${{ env.TAG_NAME }}"
